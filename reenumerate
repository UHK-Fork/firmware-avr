#!/usr/bin/env node

// Includes

var usb = require('usb');

// Constants

agentCommand = {
    REENUMERATE: 0
};

enumerationModes = {
    'keyboard'         : 0,
    'bootloader-right' : 1,
    'bootloader-left'  : 2
};

vendorId = 0x16D1;  // TODO: Restore to 0x16D0 for the final prototype.
productIds = [0x05EA, 0x05EB, 0x05EC, 0x05ED];

// Check arguments.

var args = process.argv.splice(2);

if (args.length != 1) {
    printUsageAndExit();
}

var newEnumerationMode = args[0];

var enumerationMode = enumerationModes[newEnumerationMode];
if (enumerationMode === undefined)
{
    printUsageAndExit();
}

function printUsageAndExit()
{
    console.log('Usage: jump-to-bootloader [keyboard | bootloader-left | bootloader-right]');
    process.exit(1);
}

// Set up USB connection.

var device = null;
for (var i=0; i<productIds.length && !device; i++) {
    device = usb.findByIds(vendorId, productIds[i]);
}

if (!device) {
    console.log('No keyboard found');
    process.exit(2);
}

device.open();  // TODO: What if multiple keyboards are plugged in?

interfaceNumber = 0;
interface = device.interface(interfaceNumber);
if (interface.isKernelDriverActive()) {
    interface.detachKernelDriver();
}
interface.claim();

sendAgentCommand(agentCommand.REENUMERATE, enumerationMode);

function sendAgentCommand(command, arg)
{
    setReport(new Buffer([command, arg]));
}

function setReport(message)
{
    device.controlTransfer(
        0x21,                     // bmRequestType (constant for this control request)
        0x09,                     // bmRequest (constant for this control request)
        0,                        // wValue (MSB is report type, LSB is report number)
        interfaceNumber,          // wIndex (interface number)
        message,                  // message to be sent
        function(error, data) {   // callback to be executed upon finishing the transfer
            var status = 'Set Report(0x' +  message.toString('hex') + ') sent';
            if (error.errno != 1) {
                console.log('%s - error %j', status, error);
            } else {
                console.log('%s - success', status);
            }
        }
    );
}
